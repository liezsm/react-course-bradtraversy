{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liezl.s.mier\\\\Documents\\\\react-projects\\\\practice-playground\\\\src\\\\Components\\\\Quotebox.js\";\nimport React from 'react';\nimport QuoteItem from './QuoteItem';\nimport ButtonsContainer from './ButtonsContainer'; // // get our fontawesome imports\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quotebox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      function randomize() {\n        let hexColor = '#';\n        const hex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'F'];\n\n        for (let i = 0; i < 6; i++) {\n          const randomColorNumber = Math.floor(Math.random() * hex.length);\n          hexColor += hex[randomColorNumber];\n        }\n\n        return hexColor;\n      }\n\n      (async () => {\n        console.log('clicked!');\n\n        try {\n          const quotes = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n          const data = await quotes.json(); //    console.log(data.quotes.length)\n\n          const random = Math.floor(Math.random() * data.quotes.length);\n          console.log(data.quotes[random]);\n          const {\n            quote,\n            author\n          } = data.quotes[random]; //    document.getElementById('text').innerText = `${quote}`\n          //    document.getElementById('author').innerText = `${author}`\n\n          this.setState(prevState => {\n            return { ...prevState,\n              quote: quote,\n              author: author\n            };\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n\n      const randomColor = randomize();\n      document.querySelector('body').style.backgroundColor = randomColor;\n      const bgtoChange = document.querySelectorAll('.colorflip');\n      bgtoChange.forEach(i => {\n        i.style.backgroundColor = randomColor;\n      });\n      const colortoChange = document.querySelectorAll('.flipcolortext');\n      colortoChange.forEach(i => i.style.color = randomColor);\n    };\n\n    this.state = {\n      color: \"#9e0d9e;\",\n      quote: 'Mementori Mori',\n      author: 'Stoic'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(QuoteItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        newQuote: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quotebox;","map":{"version":3,"sources":["C:/Users/liezl.s.mier/Documents/react-projects/practice-playground/src/Components/Quotebox.js"],"names":["React","QuoteItem","ButtonsContainer","Quotebox","Component","constructor","props","handleClick","randomize","hexColor","hex","i","randomColorNumber","Math","floor","random","length","console","log","quotes","fetch","data","json","quote","author","setState","prevState","err","randomColor","document","querySelector","style","backgroundColor","bgtoChange","querySelectorAll","forEach","colortoChange","color","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAYlBC,WAZkB,GAYJ,MAAM;AACf,eAASC,SAAT,GAAoB;AACjB,YAAIC,QAAQ,GAAE,GAAd;AACF,cAAMC,GAAG,GAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAX;;AAEF,aAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG,CAAlB,EAAqBA,CAAC,EAAtB,EAAyB;AACtB,gBAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,GAAG,CAACM,MAA/B,CAA1B;AACAP,UAAAA,QAAQ,IAAEC,GAAG,CAACE,iBAAD,CAAb;AACH;;AACD,eAAOH,QAAP;AACF;;AACG,OAAE,YAAW;AACTQ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACR,YAAI;AAEA,gBAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAA1B;AACA,gBAAMC,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB,CAHA,CAKJ;;AACG,gBAAMP,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBM,IAAI,CAACF,MAAL,CAAYH,MAAxC,CAAf;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACF,MAAL,CAAYJ,MAAZ,CAAZ;AACC,gBAAM;AAACQ,YAAAA,KAAD;AAAQC,YAAAA;AAAR,cAAkBH,IAAI,CAACF,MAAL,CAAYJ,MAAZ,CAAxB,CARA,CASJ;AACA;;AACA,eAAKU,QAAL,CAAeC,SAAS,IAAI;AACxB,mBAAO,EACH,GAAGA,SADA;AAEHH,cAAAA,KAAK,EAAEA,KAFJ;AAGHC,cAAAA,MAAM,EAAEA;AAHL,aAAP;AAKH,WAND;AAQC,SAnBD,CAmBC,OAAMG,GAAN,EAAU;AACPV,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH;AACI,OAxBD;;AAyBA,YAAMC,WAAW,GAAIpB,SAAS,EAA9B;AACDqB,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,eAArC,GAAuDJ,WAAvD;AACD,YAAMK,UAAU,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,YAA1B,CAAnB;AACED,MAAAA,UAAU,CAACE,OAAX,CAAoBxB,CAAC,IAAI;AACrBA,QAAAA,CAAC,CAACoB,KAAF,CAAQC,eAAR,GAA0BJ,WAA1B;AACH,OAFD;AAGD,YAAMQ,aAAa,GAAGP,QAAQ,CAACK,gBAAT,CAA0B,gBAA1B,CAAtB;AACAE,MAAAA,aAAa,CAACD,OAAd,CAAuBxB,CAAC,IAAIA,CAAC,CAACoB,KAAF,CAAQM,KAAR,GAAgBT,WAA5C;AACF,KAxDiB;;AAEd,SAAKU,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAC,UADG;AAETd,MAAAA,KAAK,EAAE,gBAFE;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAMH;;AAmDDe,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BAEI,QAAE,SAAF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAG,KAAKhC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAvEkC;;AA0EvC,eAAeJ,QAAf","sourcesContent":["import React from 'react'\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport ButtonsContainer from './ButtonsContainer';\r\n\r\n// // get our fontawesome imports\r\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Quotebox extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color:\"#9e0d9e;\",\r\n            quote: 'Mementori Mori',\r\n            author: 'Stoic'\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    handleClick = () => {\r\n         function randomize(){\r\n            let hexColor= '#';\r\n          const hex =[0,1,2,3,4,5,6,7,8,9,'A', 'B', 'C', 'D', 'F'];\r\n        \r\n        for(let i =0; i < 6; i++){\r\n           const randomColorNumber = Math.floor(Math.random() * hex.length)\r\n           hexColor+=hex[randomColorNumber]\r\n       }\r\n       return hexColor;\r\n    }\r\n        ( async() => {      \r\n            console.log('clicked!')\r\n    try {\r\n\r\n        const quotes = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\r\n        const data = await quotes.json()\r\n      \r\n    //    console.log(data.quotes.length)\r\n       const random = Math.floor( Math.random() * data.quotes.length)\r\n       console.log(data.quotes[random])\r\n        const {quote, author} = data.quotes[random]\r\n    //    document.getElementById('text').innerText = `${quote}`\r\n    //    document.getElementById('author').innerText = `${author}`\r\n    this.setState( prevState => {\r\n        return {\r\n            ...prevState,\r\n            quote: quote,\r\n            author: author\r\n        }\r\n    })\r\n        \r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n        })();\r\n        const randomColor =  randomize();\r\n       document.querySelector('body').style.backgroundColor = randomColor;\r\n      const bgtoChange = document.querySelectorAll('.colorflip')\r\n        bgtoChange.forEach( i => {\r\n            i.style.backgroundColor = randomColor\r\n        })\r\n       const colortoChange = document.querySelectorAll('.flipcolortext');\r\n       colortoChange.forEach( i => i.style.color = randomColor)\r\n    }\r\n   \r\n\r\n    render(){\r\n\r\n        return (\r\n            <div id=\"quote-box\">\r\n               \r\n                < QuoteItem />\r\n                <ButtonsContainer newQuote ={this.handleClick} />\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quotebox;"]},"metadata":{},"sourceType":"module"}