{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liezl.s.mier\\\\Documents\\\\react-projects\\\\practice-playground\\\\src\\\\Components\\\\Quotebox.js\";\nimport React from 'react';\nimport QuoteItem from './QuoteItem';\nimport ButtonsContainer from './ButtonsContainer'; // // get our fontawesome imports\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quotebox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      (async () => {\n        console.log('clicked!');\n\n        try {\n          const quotes = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n          const data = await quotes.json(); // const { id, advice} = data.slip;\n\n          console.log(data.quotes);\n          console.log(data.quotes.length);\n          const random = Math.floor(Math.random() * data.quotes.length);\n          console.log(random);\n          console.log(data.quotes[random]);\n          document.getElementById('text').innerText = `${data.quotes[random].quote}`; //    console.log(id, advice)\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n\n      let hexColor = '#';\n      const hex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'F'];\n      const randomColorNumber = Math.floor(Math.random() * hex.length);\n      console.log(randomColorNumber);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(QuoteItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        newQuote: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quotebox;","map":{"version":3,"sources":["C:/Users/liezl.s.mier/Documents/react-projects/practice-playground/src/Components/Quotebox.js"],"names":["React","QuoteItem","ButtonsContainer","Quotebox","Component","constructor","props","handleClick","console","log","quotes","fetch","data","json","length","random","Math","floor","document","getElementById","innerText","quote","err","hexColor","hex","randomColorNumber","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,WANkB,GAMJ,MAAM;AAEhB,OAAE,YAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACR,YAAI;AAEA,gBAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,wIAAD,CAA1B;AACA,gBAAMC,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB,CAHA,CAKA;;AAEDL,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACF,MAAjB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACF,MAAL,CAAYI,MAAxB;AACA,gBAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACD,MAAL,KAAgBH,IAAI,CAACF,MAAL,CAAYI,MAAxC,CAAf;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACF,MAAL,CAAYK,MAAZ,CAAZ;AAEAG,UAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA6C,GAAER,IAAI,CAACF,MAAL,CAAYK,MAAZ,EAAoBM,KAAM,EAAzE,CAbC,CAcJ;AAGC,SAjBD,CAiBC,OAAMC,GAAN,EAAU;AACPd,UAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH;AACI,OAtBD;;AAwBA,UAAIC,QAAQ,GAAE,GAAd;AACA,YAAMC,GAAG,GAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAX;AACA,YAAMC,iBAAiB,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBS,GAAG,CAACV,MAA/B,CAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYgB,iBAAZ;AAEH,KArCiB;AAGjB;;AAoCDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BAEI,QAAE,SAAF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAG,KAAKnB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnDkC;;AAsDvC,eAAeJ,QAAf","sourcesContent":["import React from 'react'\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport ButtonsContainer from './ButtonsContainer';\r\n\r\n// // get our fontawesome imports\r\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Quotebox extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        \r\n        ( async() => {      \r\n            console.log('clicked!')\r\n    try {\r\n\r\n        const quotes = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\r\n        const data = await quotes.json()\r\n      \r\n        // const { id, advice} = data.slip;\r\n\r\n       console.log(data.quotes)\r\n       console.log(data.quotes.length)\r\n       const random = Math.floor( Math.random() * data.quotes.length)\r\n       console.log(random)\r\n       console.log(data.quotes[random])\r\n\r\n       document.getElementById('text').innerText = `${data.quotes[random].quote}`\r\n    //    console.log(id, advice)\r\n\r\n        \r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n        })();\r\n\r\n        let hexColor= '#';\r\n        const hex =[0,1,2,3,4,5,6,7,8,9,'A', 'B', 'C', 'D', 'F'];\r\n        const randomColorNumber = Math.floor(Math.random() * hex.length)\r\n        console.log(randomColorNumber)\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div id=\"quote-box\">\r\n               \r\n                < QuoteItem />\r\n                <ButtonsContainer newQuote ={this.handleClick} />\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quotebox;"]},"metadata":{},"sourceType":"module"}