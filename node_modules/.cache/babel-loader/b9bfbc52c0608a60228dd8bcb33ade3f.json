{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liezl.s.mier\\\\Documents\\\\react-projects\\\\practice-playground\\\\src\\\\reactcourseNetNinja\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // todo part: useState hook\n  // exp value of useState can be array, obj, boolean, number, string\n  //   const [name, setName] = useState(\"mario\");\n  //   const [age, setAge] = useState(25);\n  //   const handleClick = () => {\n  //     setName(\"luigi\");\n  //     setAge(40);\n  //   };\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [name, setName] = useState(\"mario\"); //   exp it takes a funtion as argument\n  //  exp it runs every rerenders or when a state/props/changes\n\n  useEffect(() => {\n    //   exp to simulate a loading time, we use setTimeout but in areal word scenario, we shouldn't do it\n    setTimeout(() => {\n      fetch(\"http://localhost:8000/blogss\").then(res => {\n        //   console.log(res)\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n        setBlogs(data);\n        setIsPending(false);\n      }).catch(err => setError(err.message));\n    }, 1000);\n  }, []);\n\n  const handleDelete = id => {\n    console.log(id);\n    const updatedblogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(updatedblogs); // console.log(updatedBlogs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName(\"luigi\"),\n      children: \"Change me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All blogs..\",\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"hVswCsT1fWJtPyQ6M6UNUUOZkw4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/liezl.s.mier/Documents/react-projects/practice-playground/src/reactcourseNetNinja/components/Home.js"],"names":["useState","useEffect","BlogList","Home","blogs","setBlogs","isPending","setIsPending","error","setError","name","setName","setTimeout","fetch","then","res","ok","Error","json","data","catch","err","message","handleDelete","id","console","log","updatedblogs","filter","blog"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,OAAD,CAAhC,CAhBiB,CAiBjB;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb;AACA,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAPH,EASGJ,IATH,CASSK,IAAD,IAAU;AACd;AACAd,QAAAA,QAAQ,CAACc,IAAD,CAAR;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAbH,EAcGa,KAdH,CAcUC,GAAD,IAASZ,QAAQ,CAACY,GAAG,CAACC,OAAL,CAd1B;AAeD,KAhBS,EAgBP,IAhBO,CAAV;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,UAAMG,YAAY,GAAGvB,KAAK,CAACwB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAArB;AACAnB,IAAAA,QAAQ,CAACsB,YAAD,CAAR,CAH2B,CAI3B;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMhB,OAAO,CAAC,OAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,EAUGF,KAAK,iBAAI;AAAA,sBAAOA,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAVZ,EAWGF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXhB,EAYGF,KAAK,iBACJ,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAC,aAA9B;AAA4C,MAAA,QAAQ,EAAEmB;AAAtD;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAxED;;GAAMpB,I;;KAAAA,I;AA0EN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport BlogList from \"./BlogList\";\r\nconst Home = () => {\r\n  // todo part: useState hook\r\n  // exp value of useState can be array, obj, boolean, number, string\r\n\r\n  //   const [name, setName] = useState(\"mario\");\r\n  //   const [age, setAge] = useState(25);\r\n\r\n  //   const handleClick = () => {\r\n  //     setName(\"luigi\");\r\n  //     setAge(40);\r\n  //   };\r\n\r\n  const [blogs, setBlogs] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [name, setName] = useState(\"mario\");\r\n  //   exp it takes a funtion as argument\r\n  //  exp it runs every rerenders or when a state/props/changes\r\n\r\n  useEffect(() => {\r\n    //   exp to simulate a loading time, we use setTimeout but in areal word scenario, we shouldn't do it\r\n    setTimeout(() => {\r\n      fetch(\"http://localhost:8000/blogss\")\r\n        .then((res) => {\r\n          //   console.log(res)\r\n          if (!res.ok) {\r\n            throw Error(\"could not fetch the data for that resource\");\r\n          }\r\n          return res.json();\r\n        })\r\n\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setBlogs(data);\r\n          setIsPending(false);\r\n        })\r\n        .catch((err) => setError(err.message));\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(id);\r\n    const updatedblogs = blogs.filter((blog) => blog.id !== id);\r\n    setBlogs(updatedblogs);\r\n    // console.log(updatedBlogs);\r\n  };\r\n\r\n  return (\r\n    <div className='home'>\r\n      <h2>Homepage</h2>\r\n\r\n      <button onClick={() => setName(\"luigi\")}>Change me</button>\r\n      <p>{name}</p>\r\n      {/* <p>\r\n        {\" \"}\r\n        {name} is {age}{\" \"}\r\n      </p>\r\n      <button onClick={handleClick}>Click me</button> */}\r\n      {error && <div> {error} </div>}\r\n      {isPending && <div> Loading....</div>}\r\n      {blogs && (\r\n        <BlogList blogs={blogs} title='All blogs..' onDelete={handleDelete} />\r\n      )}\r\n\r\n      {/* <BlogList\r\n        blogs={blogs.filter((blog) => blog.author === \"mario\")}\r\n        title='Marios blogs..'\r\n        onDelete={handleDelete}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}