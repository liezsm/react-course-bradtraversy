{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    //   exp to simulate a loading time, we use setTimeout but in areal word scenario, we shouldn't do it\n    setTimeout(() => {\n      fetch(url).then(res => {\n        //   console.log(res)\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setError(err.message);\n        setIsPending(false);\n      });\n    }, 1000);\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/liezl.s.mier/Documents/react-projects/practice-playground/src/reactcourseNetNinja/components/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACSC,GAAD,IAAS;AACb;AACA,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAPH,EASGJ,IATH,CASSR,IAAD,IAAU;AACd;AACAC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAdH,EAeGQ,KAfH,CAeUC,GAAD,IAAS;AACdT,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAlBH;AAmBD,KApBS,EAoBP,IApBO,CAAV;AAsBA,WAAO,MAAM;AACXa,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAFD;AAGD,GA3BQ,EA2BN,CAAClB,GAAD,CA3BM,CAAT;AA6BA,SAAO;AACLC,IAAAA,IADK;AAELE,IAAAA,SAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAvCD;;GAAMN,Q;;AAyCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //   exp to simulate a loading time, we use setTimeout but in areal word scenario, we shouldn't do it\r\n    setTimeout(() => {\r\n      fetch(url)\r\n        .then((res) => {\r\n          //   console.log(res)\r\n          if (!res.ok) {\r\n            throw Error(\"could not fetch the data for that resource\");\r\n          }\r\n          return res.json();\r\n        })\r\n\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setData(data);\r\n          setIsPending(false);\r\n          setError(null);\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n          setIsPending(false);\r\n        });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      console.log(\"cleanup\");\r\n    };\r\n  }, [url]);\r\n\r\n  return {\r\n    data,\r\n    isPending,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}